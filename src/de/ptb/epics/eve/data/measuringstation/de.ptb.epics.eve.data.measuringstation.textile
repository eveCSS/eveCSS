h1. de.ptb.epics.eve.data.measuringstation

This package contains the data model of a measuring station. Generally a measuring station is an alignment of devices to run experiments. The measuring station itself is represented by @MeasuringStation@ (implementing the interface @IMeasuringStation@). Beginning with an abstract formulation of a device (@AbstractDevice@) there are two distinct devices available which inherit from it. The model distinguishes between an @AbstractMainPhaseDevice@  and an  @AbstractPrePostscanDevice@. 

@Motor@ and  @MotorAxis@ as well as @Detector@ and  @DetectorChannel@ are Subclasses of  @AbstractMainPaseDevice@.

Motors are devices where you can read from or write to (e.g. a 'real' motor or a radiator).They contain at least one axis. Axis can be controlled in different ways:
* Start-Value, Stop-Value, Step-Width: like @for(int i=start; i<=stop; i+stepwidth)@
* Position File: external file with position data
* PlugIn: like a function calculating the position
* set of states: e.g. {red, green, blue}
Additionally there are two 'non-physical' motors available:
* Counter: e.g. like the physical motor with start, stop and step-width
* Timer: e.g. measure 10 times once each second
Detectors are devices to measure something. They have at least one channel (@DetectorChannel@). During the main phase they can only be read. Additionally options can be set during pre and post scan phases.

Furthermore @AbstractPrePostScanDevice@ distinguishes between @Device@ and @Option@.
Values can be assigned to these devices only during pre and post scan phases (e.g. a beam shutter - open/close, fan - on/off).