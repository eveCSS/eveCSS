h1(eveTopic). Detector Channel

p. Detectors are devices where you can read from (e.g. its value) or write to (e.g. trigger its channel). They contain at least one channel.

p. A detector channel usually has different modes (called step functions) it can be controlled with:

h2(eveTopic). Average

p. The number in the __Average__ determines how many channel readings are taken to calculate an average.

h2(eveTopic). Max. Deviation (%):

p. The __Max. Deviation (%)__ bestimmt wie gross die Abweichung der ersten beiden Messpunkte voneinander maximal sein darf, damit die Werte gültig sind. Ist die Abweichung größer als __Max. Deviation (%)__ wird der erste Wert verworfen und der nächste Messwert zur neuen Bestimmung der Abweichung verwendet.

h2(eveTopic). Minimum:

p. The __Minimum__ bestimmt, ab welchem Signal die __Max. Deviation (%)__ überhaupt bestimmt wird. Ist der Messwert kleiner als der __Minimum__ 
Wert, findet keine Überprüfung statt.

h2(eveTopic). Max. Attempts:

p. __Max. Attempts__ definiert wie oft die Max. Deviation berechnet wird. Wenn __Max. Attempts__ vergangen sind ohne das die Abweichung eingehalten wird, werden keine weiteren Werte mehr verworfen und die folgenden Werte werden akzeptiert.

h2(eveTopic). Normalize Channel:

p. The __Normalize Channel__ legt den Channel fest durch den der Channel Wert geteilt wird, bevor mit den oben beschriebenen Berechnungen angefangen wird.

h2(eveTopic). Deferred Trigger:

p. If __Deferred Trigger__ is set, this Channel will be triggered after (all) other Channels of this scan Module will be read.

h2(eveTopic). Send Detector Ready Event:

p. If __Send Detector Ready Event__ is set, an Event will send if the channel reading is ready.

h3(eveTopic). Example 1

p. __Average__ = ==&empty;==, __Max. Deviation (%)__ = ==&empty;==, __Minimum__ = ==&empty;==, __Max. Attempts__ = ==&empty;==

p. __Average__ omitted ==&rArr;== no average is calculated.

h3(eveTopic). Example 2

p. __Average__ = 3, __Max. Deviation (%)__ = ==&empty;==, __Minimum__ = ==&empty;==, __Max. Attempts__ = ==&empty;==

p. __Minimum__ omitted ==&rArr;== __Average__ is calculated from three subsequent measurements.

p. measured values: {%(green)0.00197%, %(green)0.00199%, %(green)0.00153%} ==&rArr;== __Average__ = 0.00183

h3(eveTopic). Example 3

p. __Average__ = 3, __Max. Deviation (%)__ = ==&empty;==, __Minimum__ = 1.0, __Max. Attempts__ = ==&empty;==

p. measured value: -0.898492 ==&rArr;== value is less than __Minimum__ ==&rArr;== __Average__ is calculated from three subsequent measurements.

p. measured values: {%(green)-0.898492%, %(green)-0.900868%, %(green)-0.906199%} ==&rArr;== __Average__ = -0.901853

p. %(red)Achtung, bisher (Version 1.7) wird hier nur 1 Messwert aufgenommen%

h3(eveTopic). Example 4

p. __Average__ = 3, __Max. Deviation (%)__ = ==&empty;==, __Minimum__ = 0.0001, __Max. Attempts__ = ==&empty;==

p. measured values: {%(green)0.00197%, %(green)0.00199%, %(green)0.00153%} ==&rArr;== __Average__ = 0.00183

h3(eveTopic). Example 5

p. __Average__ = 3, __Max. Deviation (%)__ = 5, __Minimum__ = 0.3, __Max. Attempts__ = 10

p. measured values: {%(red)4.231%, %(green)4.787%, %(green)4.687%, %(green)4.732%}
__Max. Deviation (%)__ from 1 and 2: 13.14 => discard first value 
__Max. Deviation (%)__ from 2 and 3:  2.09 => Deviation is OK 

p. ==&rArr;== value of the channel is the __Average__ from 2., 3. and 4. point: = 4.735

h3(eveTopic). Example 6

p. __Average__ = 3, __Max. Deviation (%)__ = 0.5, __Minimum__ = 1e-8, __Max. Attempts__ = 5

p. measured values: {%(red)4.231%, %(red)4.787%, %(red)4.687%, %(red)4.732%, %(red)4.894%, %(green)4.738%, %(green)4.834%, %(green)4.963%)

__Max. Deviation (%)__ from 1 and 2: 13.14 => discard first value 
__Max. Deviation (%)__ from 2 and 3:  2.09 => discard second value 
__Max. Deviation (%)__ from 3 and 4:  0.96 => discard third value 
__Max. Deviation (%)__ from 4 and 5:  2.09 => discard fourth value 
__Max. Deviation (%)__ from 5 and 6:  3.42 => discard fifth value 

p. __Max. Attempts__ reached ==&rArr;== value of the channel is the __Average__ from 6., 7. and 8. point: = 4.845

p. %(red)Achtung, bisher (Version 1.7) wird hier nur 1 Messwert aufgenommen (der 6. Wert)%
